{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gille\\\\Documents\\\\P5_REACT\\\\kasa\\\\src\\\\app\\\\components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function Dropdown({ title, items }) {\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const toggleDropdown = () => {\n//         setIsOpen(!isOpen);\n//     };\n\n//     return (\n//         <div className=\"dropdown\">\n//             <div className=\"title\" onClick={toggleDropdown}>\n//                 <h3>{title}</h3>\n//                 <span>\n//                     {isOpen ? (\n//                         <i className=\"fas fa-chevron-down\"></i>\n//                     ) : (\n//                         <i className=\"fas fa-chevron-up\"></i>\n//                     )}\n//                 </span>\n//             </div>\n//             {isOpen && (\n//                 <div className=\"content\">\n//                     <ul>\n//                         {items.map((item, index) => (\n//                             <li key={index}>{item}</li>\n//                         ))}\n//                     </ul>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Dropdown;\n//------------------------------------------------\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown({\n  title,\n  items\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas ${isOpen ? 'fa-chevron-up' : 'fa-chevron-down'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `content ${isOpen ? 'open' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Dropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","title","items","_s","isOpen","setIsOpen","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/gille/Documents/P5_REACT/kasa/src/app/components/Dropdown.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// function Dropdown({ title, items }) {\r\n//     const [isOpen, setIsOpen] = useState(false);\r\n\r\n//     const toggleDropdown = () => {\r\n//         setIsOpen(!isOpen);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"dropdown\">\r\n//             <div className=\"title\" onClick={toggleDropdown}>\r\n//                 <h3>{title}</h3>\r\n//                 <span>\r\n//                     {isOpen ? (\r\n//                         <i className=\"fas fa-chevron-down\"></i>\r\n//                     ) : (\r\n//                         <i className=\"fas fa-chevron-up\"></i>\r\n//                     )}\r\n//                 </span>\r\n//             </div>\r\n//             {isOpen && (\r\n//                 <div className=\"content\">\r\n//                     <ul>\r\n//                         {items.map((item, index) => (\r\n//                             <li key={index}>{item}</li>\r\n//                         ))}\r\n//                     </ul>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Dropdown;\r\n//------------------------------------------------\r\nimport React, { useState } from 'react';\r\n\r\nfunction Dropdown({ title, items }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div className=\"title\" onClick={toggleDropdown}>\r\n                <h3>{title}</h3>\r\n                <span>\r\n                    <i className={`fas ${isOpen ? 'fa-chevron-up' : 'fa-chevron-down'}`}></i>\r\n                </span>\r\n            </div>\r\n            <div className={`content ${isOpen ? 'open' : ''}`}>\r\n                <ul>\r\n                    {items.map((item, index) => (\r\n                        <li key={index}>{item}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropdown;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMS,cAAc,GAAGA,CAAA,KAAM;IACzBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,oBACIL,OAAA;IAAKQ,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBT,OAAA;MAAKQ,SAAS,EAAC,OAAO;MAACE,OAAO,EAAEH,cAAe;MAAAE,QAAA,gBAC3CT,OAAA;QAAAS,QAAA,EAAKP;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBd,OAAA;QAAAS,QAAA,eACIT,OAAA;UAAGQ,SAAS,EAAE,OAAOH,MAAM,GAAG,eAAe,GAAG,iBAAiB;QAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAE,WAAWH,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAI,QAAA,eAC9CT,OAAA;QAAAS,QAAA,EACKN,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBjB,OAAA;UAAAS,QAAA,EAAiBO;QAAI,GAAZC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACV,EAAA,CAxBQH,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}